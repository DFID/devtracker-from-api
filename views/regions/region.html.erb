<div class="govuk-breadcrumbs govuk-breadcrumbs--collapse-on-mobile">
    <ol class="govuk-breadcrumbs__list">
        <li class="govuk-breadcrumbs__list-item"><a class="govuk-breadcrumbs__link" href="/">Home</a></li>
        <% if region[:type] == "Regional" then %>
            <li class="govuk-breadcrumbs__list-item"><a class="govuk-breadcrumbs__link" href="/location/regional">Aid by Location</a></li>
        <% else %>
            <li class="govuk-breadcrumbs__list-item"><a class="govuk-breadcrumbs__link" href="/location/global">Aid by Location</a></li>
        <% end %>
        <li class="govuk-breadcrumbs__list-item" aria-current="page"><%= region[:name] %></li>
    </ol>
</div>

<%= erb :'partials/_regions-tabs', :locals => { :active => "summary", :region => region, :project_count => region[:totalActiveProjects] } %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
        <h2 class="govuk-heading-m">Summary</h2>
        <p class="govuk-body description"><%= markdown_to_html(region[:description])%></p>
        <script type="text/javascript">
            $(document).ready(function() {
                $('div.description').expander({
                    slicePoint    : 300,
                    expandSpeed   : 0,
                    collapseSpeed : 0,
                    expandText    : 'Read more about <%= region[:name] %>' 
                });
            });
        </script>
        <h3 class="govuk-heading-s">Key information</h3>
        <dl class="govuk-summary-list govuk-!-margin-bottom-4">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key app-summary-list__key govuk-!-font-weight-regular">
                    Programme budget approved for <%= current_financial_year %>
                </dt>
                <dd class="govuk-summary-list__value">
                    <%= Money.new(region[:regionBudget].to_f.round(0)*100, region[:regionBudgetCurrency]).format(:no_cents_if_whole => true,:sign_before_symbol => false) %>
                </dd>
            </div>
            <div class="govuk-summary-list__row govuk-summary-list__row--no-border">
                <dt class="govuk-summary-list__key app-summary-list__key govuk-!-font-weight-regular">
                    Active Programmes
                </dt>
                <dd class="govuk-summary-list__value">
                    <%= region[:totalActiveProjects] || "&nbsp;" %>
                </dd>
            </div>
        </dl>

        <details class="govuk-details" data-module="govuk-details">
            <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">
                    Programme budget information
                </span>
            </summary>
            <div class="govuk-details__text">
                Sum of programme budget for this financial year, as approved to date and this figure may change over time. Some values may not be included if programmes are in an active procurement phase.
            </div>
        </details>
        
        <div id="countryMap" aria-hidden="true" class="countryMap"></div>

        <input type="hidden" id="countryName" value="<%=region[:name] %>">
        <input type="hidden" id="countryCode" value="<%=region[:code] %>">

        <% if region[:code] == "NS" || region[:code] == "ZZ" || region[:code] == "998" %>
            <input id="projectType" value="global" type="hidden">
        <%else%>
            <input type="hidden" id="projectType" value="region">
        <%end%>
        
        <div id="countryMapDisclaimer" class="disclaimer grey">
            <span class="govuk-caption-m govuk-!-font-size-14 govuk-!-margin-bottom-5">Disclaimer: Country borders do not necessarily reflect the UK Government's official position.</span>
        </div>
    </div>
</div>

<div class="app-chart-row">
    <div class="app-chart-row__chart">
        <h3 class="govuk-heading-s app-chart-row__chart--heading">Sector groups as a percentage of region budget</h3>
        <p class="govuk-body-s app-chart-row__chart--intro">The highest ranking sectors by Programme spend, consistent with the Development Assistance Committee's (DAC) classifications.</p>
        <div class="app-chart-row__chart--data">
            <div id="sectorChart"></div>
        </div>
    </div>
    <div class="app-chart-row__chart">
        <h3 class="govuk-heading-s app-chart-row__chart--heading">
            Programme budget total by year
        </h3>
        <p class="govuk-body-s app-chart-row__chart--intro">
            Budgets approved at a programme level to date. This may be different from the overall operational plan budget for <%= region[:name] %>
        </p>
        <div class="app-chart-row__chart--data">
            <div id="budget-year-chart" style="height: 250px;" class="standard"></div>
        </div>
    </div>
</div>

<div class="govuk-grid-row govuk-!-margin-top-8">
    <div class="govuk-grid-column-full">
        <strong class="govuk-tag govuk-tag--blue govuk-!-margin-top-4 govuk-!-margin-bottom-3">XML DATA</strong>
        <div><a href="<%= region[:url]%>" class="govuk-link" target="_blank">Download IATI Data for <%= region[:name]%></a></div>
    </div>
</div>

<!-- <script src="/javascripts/donut.js"></script>
 <script src="/javascripts/progress.js"></script>
 <script src="/javascripts/bar.js"></script> -->
 <script>
    $(document).ready(function() {
        var colors = ['#28a197', '#f47738', '#1d70b8', '#4c2c92', '#f499be', '#85994b'];
        var sectorGraphDataVar = $.get('/region-sector-graph-data/<%= region[:code] %>')
        .done(function(response){
            if(response.output.length > 0){
                var graphData = response.output[0];
                var groups = [response.output[1]];
                var fColors = {};
                for(i = 0; i<graphData.length; i++){
                    fColors[graphData[i][0]] = colors[i];
                };

                var stacked = c3.generate({
                    bindto: '#sectorChart',
                    data: {
                        columns: graphData,
                        type: 'bar',
                        labels: false,
                        colors: fColors,
                        groups: groups,
                        order: 'asc'
                    },
                    tooltop: {
                        grouped: false
                    },
                    padding: {left: 10, right: 10},
                    axis: {
                        rotated: true,
                        x: {
                            show: false
                        },
                        y: {
                            label: '%',
                            min: 0,
                            max: 100,
                            padding: {top: 0, bottom: 0}
                        }
                    },
                    bar: {
                        width: {
                            ratio: .6
                        }
                    },
                    
                    tooltip: {
                        format: {
                            title: function (x) { return 'Sector %' }
                        }
                    }
                });
                $('#sect-container').slideDown('slow');
            }
        });
        ////
        // var graphData = [<%#= regionSectorGraphData[0] %>];
        // var colors = ['#28a197', '#f47738', '#1d70b8', '#4c2c92', '#f499be', '#85994b'];
        // var fColors = {};
        // for(i = 0; i<graphData.length; i++){
        //     fColors[graphData[i][0]] = colors[i];
        // };
        // var stacked = c3.generate({
        //     bindto: '#sectorChart',
        //     data: {
        //         columns: [
        //             <%#= regionSectorGraphData[0] %>
        //         ],
        //         type: 'bar',
        //         labels: false,
        //         colors: fColors,
        //         groups: [
        //             <%#= regionSectorGraphData[1] %>
        //         ],
        //         order: 'asc'
        //     },
        //     tooltop: {
        //         grouped: false
        //     },
        //     axis: {
        //         rotated: true,
        //         x: {
        //             show: true
        //         },
        //         y: {
        //             label: '%'
        //         }
        //     },
        //     bar: {
        //         width: {
        //             ratio: .5
        //         }
        //     },
        //     grid: {
        //         y: {
        //             lines: [{
        //                 value: 0
        //             }]
        //         }
        //     },
        //     tooltip: {
        //         format: {
        //             title: function (x) { return '%' }
        //         }
        //     }
        // });
    <%# if(year_wise_budgets) then budgetYearData = financial_year_wise_budgets(year_wise_budgets,"C") %>
        var yTicks = [];
        var chart = c3.generate({           
            bindto: '#budget-year-chart',   
            legend: {
                show: false
            },             
            tooltip: {     
                format: {  
                    value: function(value){
                        return "Â£" + Math.round(value).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    }
                }   
            },  
            bar: {  
                width: {    
                    ratio: .5   
                }   
            },  
            data: { 
                x: 'x', 
                columns: [  
                    ['x', <%= regionYearWiseBudgets[0] %>], 
                    ['Financial Year', <%= regionYearWiseBudgets[1] %>] 
                ],  
                type: 'bar' 
            },  
            color: {    
                pattern: ['#d8dcbf']    
            },  
            axis:{  
                x:{ 
                    type: 'category'    
                },
                y: {                   
                    tick: {           
                        count: 6,     
                        format: function(d){ yTicks.push(d3.format(".2s")(d)); return d3.format(".2s")(d);} /*This code is used for converting the raw data into data with scientific prefix like 'M' for millions.*/                   
                    },
                }     
            },
        });
        // var chartv3 = c3.generate({
        //         bindto: '#budget-year-chart2',
        //       data: {
        //         columns: <%#= chartDataColumnData %>,
        //         type: 'bar',
        //         groups: [<%#= chartDataRepOrgs %>],
        //       },
        //       color: {
        //         pattern: colors
        //       },
        //       tooltip: {
        //             format: {
        //                 /*value: function(value){
        //                     return value;
        //                 }*/
        //                 value: function(value){
        //                     return "Â£" + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        //                 }
        //             }
        //         },
        //       axis: { 
        //         x: {
        //         type: 'category',
        //         categories: <%#= chartDataFinYears %>,
        //       },
        //       y: {
        //                 tick: {
        //                     //count: 6,
        //                     format: function(d){ 
        //                         yTicks.push(d3.format(".2s")(d)); 
        //                         return "Â£" + d3.format(".2s")(d);
        //                     } /*This code is used for converting the raw data into data with scientific prefix like 'M' for millions.*/
        //                 },
        //             }
        //     },
        //     });
        /*This code is for generating the grid line values for the bar chart*/
        var tempString = [];
        yTicks.pop();
        for(i = 0; i < 5; i++) {
            tempString[i] = yTicks.pop().replace("M","") + '000000';
        }
        /*Cleaned the ticks array that stored pointers for the grid line generating locations*/
        yTicks = [];
    });
 </script>


<!-- <link rel="stylesheet" type="text/css" href="/javascripts/leaflet/leaflet.css">
<link rel="stylesheet" type="text/css" href="/javascripts/leaflet/MarkerCluster.css">
<link rel="stylesheet" type="text/css" href="/javascripts/leaflet/MarkerCluster.Default.css"> -->
<script type="text/javascript">
    var mapType = "region";
    var locations = "";<%#= locations.to_json%>
    var ProjectTitle = "<%= region[:name] %>";
    window.mainMarkers = <%= mapMarkers.to_json%>;
</script>
<!--<script src="http://maps.googleapis.com/maps/api/js?sensor=false"></script> -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"
integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
crossorigin=""/>
<!-- Make sure you put this AFTER Leaflet's CSS -->
<script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"
integrity="sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og=="
crossorigin=""></script>
<script src="/javascripts/regionBounds.js" type="text/javascript"></script>
<script src="/javascripts/leaflet/countryBounds.js" type="text/javascript"></script>
<link rel="stylesheet" href="/javascripts/leaflet/MarkerCluster_new.css">
<link rel="stylesheet" href="/javascripts/leaflet/MarkerCluster.Default_new.css">
<script src="/javascripts/leaflet/leaflet.markercluster_new.js"></script>
<script src="/javascripts/countrypagemap_new.js" type="text/javascript"></script>
